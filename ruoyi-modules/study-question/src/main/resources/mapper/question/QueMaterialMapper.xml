<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.question.mapper.QueMaterialMapper">
    
    <resultMap type="QueMaterial" id="QueMaterialResult">
        <result property="materialId"    column="material_id"    />
        <result property="materialName"    column="material_name"    />
        <result property="materialType"    column="material_type"    />
        <result property="materialDetail"    column="material_detail"    />
        <result property="subjectId"    column="subject_id"    />
        <result property="deleteStatus"    column="delete_status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="version"    column="version"    />
    </resultMap>

    <sql id="selectQueMaterialVo">
        select material_id, material_name, material_type, material_detail, subject_id, delete_status, create_time, update_time, version from que_material
    </sql>

    <select id="selectQueMaterialList" parameterType="QueMaterial" resultMap="QueMaterialResult">
        <include refid="selectQueMaterialVo"/>
        <where>  
            <if test="materialName != null  and materialName != ''"> and material_name like concat('%', #{materialName}, '%')</if>
            <if test="materialType != null  and materialType != ''"> and material_type = #{materialType}</if>
            <if test="subjectId != null  and subjectId != ''"> and subject_id = #{subjectId}</if>
        </where>
    </select>
    
    <select id="selectQueMaterialById" parameterType="Long" resultMap="QueMaterialResult">
        <include refid="selectQueMaterialVo"/>
        where material_id = #{materialId}
    </select>
        
    <insert id="insertQueMaterial" parameterType="QueMaterial" useGeneratedKeys="true" keyProperty="materialId">
        insert into que_material
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="materialName != null">material_name,</if>
            <if test="materialType != null">material_type,</if>
            <if test="materialDetail != null">material_detail,</if>
            <if test="subjectId != null">subject_id,</if>
            <if test="deleteStatus != null">delete_status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="version != null">version,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="materialName != null">#{materialName},</if>
            <if test="materialType != null">#{materialType},</if>
            <if test="materialDetail != null">#{materialDetail},</if>
            <if test="subjectId != null">#{subjectId},</if>
            <if test="deleteStatus != null">#{deleteStatus},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="version != null">#{version},</if>
         </trim>
    </insert>

    <update id="updateQueMaterial" parameterType="QueMaterial">
        update que_material
        <trim prefix="SET" suffixOverrides=",">
            <if test="materialName != null">material_name = #{materialName},</if>
            <if test="materialType != null">material_type = #{materialType},</if>
            <if test="materialDetail != null">material_detail = #{materialDetail},</if>
            <if test="subjectId != null">subject_id = #{subjectId},</if>
            <if test="deleteStatus != null">delete_status = #{deleteStatus},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="version != null">version = #{version},</if>
        </trim>
        where material_id = #{materialId}
    </update>

    <delete id="deleteQueMaterialById" parameterType="Long">
        delete from que_material where material_id = #{materialId}
    </delete>

    <delete id="deleteQueMaterialByIds" parameterType="String">
        delete from que_material where material_id in 
        <foreach item="materialId" collection="array" open="(" separator="," close=")">
            #{materialId}
        </foreach>
    </delete>
</mapper>