<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.question.mapper.QueStoreMapper">

    <resultMap type="QueStore" id="QueStoreResult">
        <result property="storeId"    column="store_id"    />
        <result property="storeType"    column="store_type"    />
        <result property="storeContent"    column="store_content"    />
        <result property="storeDetail"    column="store_detail"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectQueStoreVo">
        select store_id, store_type, store_content, store_detail, create_by, create_time, update_by, update_time, remark from que_store
    </sql>

    <select id="selectQueStoreList" parameterType="QueStore" resultMap="QueStoreResult">
        <include refid="selectQueStoreVo"/>
        <where>
            <if test="storeType != null  and storeType != ''"> and store_type = #{storeType}</if>
            <if test="storeContent != null  and storeContent != ''"> and store_content like concat('%', #{storeContent}, '%')</if>
            <if test="storeDetail != null  and storeDetail != ''"> and store_detail = #{storeDetail}</if>
        </where>
    </select>

    <select id="selectQueStoreById" parameterType="Long" resultMap="QueStoreResult">
        <include refid="selectQueStoreVo"/>
        where store_id = #{storeId}
    </select>

    <insert id="insertQueStore" parameterType="QueStore" useGeneratedKeys="true" keyProperty="storeId">
        insert into que_store
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storeType != null">store_type,</if>
            <if test="storeContent != null">store_content,</if>
            <if test="storeDetail != null">store_detail,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storeType != null">#{storeType},</if>
            <if test="storeContent != null">#{storeContent},</if>
            <if test="storeDetail != null">#{storeDetail},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateQueStore" parameterType="QueStore">
        update que_store
        <trim prefix="SET" suffixOverrides=",">
            <if test="storeType != null">store_type = #{storeType},</if>
            <if test="storeContent != null">store_content = #{storeContent},</if>
            <if test="storeDetail != null">store_detail = #{storeDetail},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where store_id = #{storeId}
    </update>

    <delete id="deleteQueStoreById" parameterType="Long">
        delete from que_store where store_id = #{storeId}
    </delete>

    <delete id="deleteQueStoreByIds" parameterType="String">
        delete from que_store where store_id in
        <foreach item="storeId" collection="array" open="(" separator="," close=")">
            #{storeId}
        </foreach>
    </delete>
</mapper>